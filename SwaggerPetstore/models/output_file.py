#!/usr/bin/env python
# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

class OutputFile(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """

    def __init__(self):
        """
        Swagger model

        :param dict swaggerTypes: The key is attribute name and the value is attribute type.
        :param dict attributeMap: The key is attribute name and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'source': 'Object',
            'uri': 'str',
            'filename': 'str',
            'size': 'int',
            'created_at': 'DateTime'
        }

        self.attribute_map = {
            'id': 'id',
            'source': 'source',
            'uri': 'uri',
            'filename': 'filename',
            'size': 'size',
            'created_at': 'created_at'
        }
        
        # Unique identifier for the file.
        self.id = None  # str
        
        # Sources for the files including the input files and conversion used.
        self.source = None  # Object
        
        # Url for downloading the file.
        self.uri = None  # str
        
        # Filename of the file.
        self.filename = None  # str
        
        # Size of the file in bytes.
        self.size = None  # int
        
        # Date and time when the job was created.
        self.created_at = None  # DateTime
        

    def __repr__(self):
        properties = []
        for p in self.__dict__:
            if p != 'swaggerTypes' and p != 'attributeMap':
                properties.append('{prop}={val!r}'.format(prop=p, val=self.__dict__[p]))

        return '<{name} {props}>'.format(name=__name__, props=' '.join(properties))


